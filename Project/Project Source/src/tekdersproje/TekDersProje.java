/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tekdersproje;

import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author ErtuÄŸrul Demir
 */
public class TekDersProje extends javax.swing.JFrame {

    /**
     * Creates new form TekDersProje
     */
    
    static dataClass Data;
    static LoginThread loginThread;
    static ExitThread exitThread;
    
    static ElevatorThread ElevatorThread_1;
    static ElevatorThread ElevatorThread_2;
    static ElevatorThread ElevatorThread_3;
    static ElevatorThread ElevatorThread_4;
    static ElevatorThread ElevatorThread_5; 
    
    static ControlThread controlThread;
    
    
    
    public static void startProject(){
        
        try {
        Data = new dataClass();
            
        loginThread = new LoginThread(Data);
        exitThread = new ExitThread(Data);
        
        //controller_thread=new Controller_thread(avm_data);
        ElevatorThread_1 = new ElevatorThread(Data);
        ElevatorThread_2 = new ElevatorThread(Data);
        ElevatorThread_3 = new ElevatorThread(Data);
        ElevatorThread_4 = new ElevatorThread(Data);
        ElevatorThread_5 = new ElevatorThread(Data);
        //controller_thread._controller_thread_add(asansor_thread_1, asansor_thread_2, asansor_thread_3, asansor_thread_4, asansor_thread_5);

        //Starting Elevators 
        ElevatorThread_1.setIsActive(true);
        //ElevatorThread_2.setIsActive(isActiveElevatorThred_2);
        ElevatorThread_2.setIsActive(false);
        ElevatorThread_3.setIsActive(false);
        ElevatorThread_4.setIsActive(false);
        ElevatorThread_5.setIsActive(false);

        
        controlThread = new ControlThread(Data, loginThread, exitThread, ElevatorThread_1, ElevatorThread_2, ElevatorThread_3, ElevatorThread_4, ElevatorThread_5);
        
        loginThread.start();
        exitThread.start();

        ElevatorThread_1.start();
        ElevatorThread_2.start();
        ElevatorThread_3.start();
        ElevatorThread_4.start();
        ElevatorThread_5.start();
        
        //controller_thread.start();
            
        controlThread.start();
        
        loginThread.join();
        exitThread.join();
        
        ElevatorThread_1.join();
        ElevatorThread_2.join();
        ElevatorThread_3.join();
        ElevatorThread_4.join();
        ElevatorThread_5.join();
        
        controlThread.join();
        /*
        while(true){
           
            if(controlThread.isIsActiveElevatorThred_1()){
                ElevatorThread_1.start();
            }else{
                ElevatorThread_1.wait();
            }
            if(controlThread.isIsActiveElevatorThred_1()){
                ElevatorThread_2.start();
            }
            if(controlThread.isIsActiveElevatorThred_1()){
                ElevatorThread_3.start();
            }
            if(controlThread.isIsActiveElevatorThred_1()){
                ElevatorThread_4.start();
            }
            if(controlThread.isIsActiveElevatorThred_1()){
                ElevatorThread_5.start();
            }
            
            ElevatorThread_1.join();
            ElevatorThread_2.join();
            ElevatorThread_3.join();
            ElevatorThread_4.join();
            ElevatorThread_5.join();
            
        
        }
        */
        
        } catch (InterruptedException ex) {
            Logger.getLogger(TekDersProje.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    
    public TekDersProje() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator7 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        LoginThread_CurrentPassengerSize_Jlabel = new javax.swing.JLabel();
        loginThread_CurrentTartget_Jlabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        LoginThread_PassengerSize_Output = new javax.swing.JLabel();
        LoginThread_CurrentTargetFloor_Output = new javax.swing.JLabel();
        LoginThread_TotalPassenger_Ouput = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ExitThread_CurrentPassengerRequest_Label = new javax.swing.JLabel();
        ExitThread_CurrentPassengerRequest_Output = new javax.swing.JLabel();
        ExitThread_TargetFloor_Jlabel = new javax.swing.JLabel();
        ExitThread_CurrentTargetFloor_Output = new javax.swing.JLabel();
        ExitThread_ExitCount_Jlabel = new javax.swing.JLabel();
        ExitThread_ExitCount_Output = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Floor_0 = new javax.swing.JLabel();
        Floor_1 = new javax.swing.JLabel();
        Floor_2 = new javax.swing.JLabel();
        Floor_3 = new javax.swing.JLabel();
        Floor_4 = new javax.swing.JLabel();
        Floor_0_Output = new javax.swing.JLabel();
        Floor_1_Output = new javax.swing.JLabel();
        Floor_2_Output = new javax.swing.JLabel();
        Floor_3_Output = new javax.swing.JLabel();
        Floor_4_Output = new javax.swing.JLabel();
        Que_0 = new javax.swing.JLabel();
        Que_1 = new javax.swing.JLabel();
        Que_2 = new javax.swing.JLabel();
        Que_3 = new javax.swing.JLabel();
        Que_4 = new javax.swing.JLabel();
        Que_0_Count = new javax.swing.JLabel();
        Que_1_Count = new javax.swing.JLabel();
        Que_2_Count = new javax.swing.JLabel();
        Que_3_Count = new javax.swing.JLabel();
        Que_4_Count = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Que_0_Element_Jlabel = new javax.swing.JLabel();
        Que_1_Element_Jlabel = new javax.swing.JLabel();
        Que_2_Element_Jlabel = new javax.swing.JLabel();
        Que_3_Element_Jlabel = new javax.swing.JLabel();
        Que_4_Element_Jlabel = new javax.swing.JLabel();
        Que_0_Element_Output = new javax.swing.JLabel();
        Que_1_Element_Output = new javax.swing.JLabel();
        Que_2_Element_Output = new javax.swing.JLabel();
        Que_3_Element_Output = new javax.swing.JLabel();
        Que_4_Element_Output = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        FinalExitCount = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        Elevator_1_State_Jlabel = new javax.swing.JLabel();
        Elevator_1_CurrentFloor_Jlabel = new javax.swing.JLabel();
        Elevator_1_MaxFloor_Jlabel = new javax.swing.JLabel();
        Elevator_1_Capacity_Jlabel = new javax.swing.JLabel();
        Elevator_1_CountInside_Jlabe = new javax.swing.JLabel();
        Elevator_1_InsidePassenger_Jlabel = new javax.swing.JLabel();
        Elevator_1_State_Output = new javax.swing.JLabel();
        Elevator_1_CurrentFloor_Output = new javax.swing.JLabel();
        Elevator_1_MaxFloor_Output = new javax.swing.JLabel();
        Elevator_1_InsideElement_Output = new javax.swing.JLabel();
        Elevator_1_Capacity_Output = new javax.swing.JLabel();
        Elevator_1_CountInside_Output = new javax.swing.JLabel();
        Elevator_2_InsidePassenger_Output = new javax.swing.JLabel();
        Elevator_2_InsidePassenger_Jlabel = new javax.swing.JLabel();
        Elevator_2_MaxFloor_Jlabel = new javax.swing.JLabel();
        Elevator_2_CurrentFloor_Jlabel = new javax.swing.JLabel();
        Elevator_2_State_Jlabel = new javax.swing.JLabel();
        Elevator_2_State_Output = new javax.swing.JLabel();
        Elevator_2_Title_Jlabel = new javax.swing.JLabel();
        Elevator_2_Capacity_Jlabel = new javax.swing.JLabel();
        Elevator_2_CountInside_Jlabel = new javax.swing.JLabel();
        Elevator_2_Capacity_Output = new javax.swing.JLabel();
        Elevator_2_CountInside_Output = new javax.swing.JLabel();
        Elevator_2_CurrentFloor_Output = new javax.swing.JLabel();
        Elevator_2_MaxFloor_Output = new javax.swing.JLabel();
        Elevator_3_InsidePassenger_Output = new javax.swing.JLabel();
        Elevator_3_InsidePassenger_Jlabel = new javax.swing.JLabel();
        Elevator_3_MaxFloor_Jlabel = new javax.swing.JLabel();
        Elevator_3_CurrentFloor_Jlabel = new javax.swing.JLabel();
        Elevator_3_State_Jlabel = new javax.swing.JLabel();
        Elevator_3_State_Output = new javax.swing.JLabel();
        Elevator_3_Title_Jlabel = new javax.swing.JLabel();
        Elevator_3_Capacity_Jlabel = new javax.swing.JLabel();
        Elevator_3_CountInside_Jlabel = new javax.swing.JLabel();
        Elevator_3_Capacity_Output = new javax.swing.JLabel();
        Elevator_3_CountInside_Output = new javax.swing.JLabel();
        Elevator_3_CurrentFloor_Output = new javax.swing.JLabel();
        Elevator_3_MaxFloor_Output = new javax.swing.JLabel();
        Elevator_4_InsidePassenger_Output = new javax.swing.JLabel();
        Elevator_4_InsidePassenger_Jlabel = new javax.swing.JLabel();
        Elevator_4_MaxFloor_Jlabel = new javax.swing.JLabel();
        Elevator_4_CurrentFloor_Jlabel = new javax.swing.JLabel();
        Elevator_4_State_Jlabel = new javax.swing.JLabel();
        Elevator_4_State_Output = new javax.swing.JLabel();
        Elevator_4_Title_Jlabel = new javax.swing.JLabel();
        Elevator_4_Capacity_Jlabel = new javax.swing.JLabel();
        Elevator_4_CountInside_Jlabel = new javax.swing.JLabel();
        Elevator_4_Capacity_Output = new javax.swing.JLabel();
        Elevator_4_CountInside_Output = new javax.swing.JLabel();
        Elevator_4_CurrentFloor_Output = new javax.swing.JLabel();
        Elevator_4_MaxFloor_Output = new javax.swing.JLabel();
        Elevator_5_InsidePassenger_Output = new javax.swing.JLabel();
        Elevator_5_InsidePassenger_Jlabel = new javax.swing.JLabel();
        Elevator_5_MaxFloor_Jlabel = new javax.swing.JLabel();
        Elevator_5_CurrentFloor_Jlabel = new javax.swing.JLabel();
        Elevator_5_State_Jlabel = new javax.swing.JLabel();
        Elevator_5_State_Output = new javax.swing.JLabel();
        Elevator_5_Title_Jlabel = new javax.swing.JLabel();
        Elevator_5_Capacity_Jlabel = new javax.swing.JLabel();
        Elevator_5_CountInside_Jlabel = new javax.swing.JLabel();
        Elevator_5_Capacity_Output = new javax.swing.JLabel();
        Elevator_5_CountInside_Output = new javax.swing.JLabel();
        Elevator_5_CurrentFloor_Output = new javax.swing.JLabel();
        Elevator_5_MaxFloor_Output = new javax.swing.JLabel();
        UpdateTable = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Login Thread");

        LoginThread_CurrentPassengerSize_Jlabel.setText("CurrentPassengerSize: ");

        loginThread_CurrentTartget_Jlabel.setText("CurrentTargetFloor:");

        jLabel2.setText("Total Produced Passenger:");

        LoginThread_PassengerSize_Output.setText("0");

        LoginThread_CurrentTargetFloor_Output.setText("0");

        LoginThread_TotalPassenger_Ouput.setText("0");

        jLabel3.setText("Exit Thread");

        ExitThread_CurrentPassengerRequest_Label.setText("Current Passenger Request: ");

        ExitThread_CurrentPassengerRequest_Output.setText("0");

        ExitThread_TargetFloor_Jlabel.setText("Current target Floor:");

        ExitThread_CurrentTargetFloor_Output.setText("0");

        ExitThread_ExitCount_Jlabel.setText("Exit Request Count:");

        ExitThread_ExitCount_Output.setText("0");

        jLabel4.setText("Que and Floor Statues");

        Floor_0.setText("0.Floor:");

        Floor_1.setText("1.Floor:");

        Floor_2.setText("2.Floor:");

        Floor_3.setText("3.Floor:");

        Floor_4.setText("4.Floor:");

        Floor_0_Output.setText("0");

        Floor_1_Output.setText("0");

        Floor_2_Output.setText("0");

        Floor_3_Output.setText("0");

        Floor_4_Output.setText("0");

        Que_0.setText("0.Que");

        Que_1.setText("1.Que");

        Que_2.setText("2.Que");

        Que_3.setText("3.Que");

        Que_4.setText("4.Que");

        Que_0_Count.setText("0");

        Que_1_Count.setText("0");

        Que_2_Count.setText("0");

        Que_3_Count.setText("0");

        Que_4_Count.setText("0");

        jLabel6.setText("   Que Elements");

        Que_0_Element_Jlabel.setText("0.Que: ");

        Que_1_Element_Jlabel.setText("1.Que: ");

        Que_2_Element_Jlabel.setText("2.Que: ");

        Que_3_Element_Jlabel.setText("3.Que: ");

        Que_4_Element_Jlabel.setText("4.Que: ");

        Que_0_Element_Output.setText("[]");

        Que_1_Element_Output.setText("[]");

        Que_2_Element_Output.setText("[]");

        Que_3_Element_Output.setText("[]");

        Que_4_Element_Output.setText("[]");

        jLabel5.setText("Exit Count");

        FinalExitCount.setText("0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
                    .addComponent(jSeparator3))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addContainerGap()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(LoginThread_CurrentPassengerSize_Jlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(loginThread_CurrentTartget_Jlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                            .addGap(18, 18, 18)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(LoginThread_PassengerSize_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(LoginThread_CurrentTargetFloor_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(LoginThread_TotalPassenger_Ouput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(194, 194, 194)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(187, 187, 187)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(ExitThread_CurrentPassengerRequest_Label)
                                        .addGap(18, 18, 18)
                                        .addComponent(ExitThread_CurrentPassengerRequest_Output, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ExitThread_TargetFloor_Jlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ExitThread_ExitCount_Jlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ExitThread_ExitCount_Output, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(ExitThread_CurrentTargetFloor_Output, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(FinalExitCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(170, 170, 170)
                                .addComponent(jLabel4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(Floor_0, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Floor_0_Output, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(Floor_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(Floor_2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(Floor_3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(Floor_4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Floor_2_Output)
                                            .addComponent(Floor_3_Output)
                                            .addComponent(Floor_4_Output)
                                            .addComponent(Floor_1_Output, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(48, 48, 48)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Que_0, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Que_1)
                                    .addComponent(Que_2)
                                    .addComponent(Que_3)
                                    .addComponent(Que_4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Que_0_Count, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Que_1_Count, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Que_2_Count, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Que_3_Count, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Que_4_Count, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(176, 176, 176)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(Que_0_Element_Jlabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(Que_0_Element_Output, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Que_1_Element_Jlabel)
                                            .addComponent(Que_2_Element_Jlabel))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Que_2_Element_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(Que_1_Element_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Que_3_Element_Jlabel)
                                            .addComponent(Que_4_Element_Jlabel))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Que_4_Element_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(Que_3_Element_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2)
                            .addComponent(jSeparator9))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(LoginThread_CurrentPassengerSize_Jlabel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LoginThread_PassengerSize_Output)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginThread_CurrentTartget_Jlabel)
                    .addComponent(LoginThread_CurrentTargetFloor_Output))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(LoginThread_TotalPassenger_Ouput))
                .addGap(50, 50, 50)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ExitThread_CurrentPassengerRequest_Label)
                    .addComponent(ExitThread_CurrentPassengerRequest_Output))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ExitThread_TargetFloor_Jlabel)
                    .addComponent(ExitThread_CurrentTargetFloor_Output))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ExitThread_ExitCount_Jlabel)
                    .addComponent(ExitThread_ExitCount_Output))
                .addGap(18, 18, 18)
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FinalExitCount)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Floor_0)
                    .addComponent(Floor_0_Output)
                    .addComponent(Que_0)
                    .addComponent(Que_0_Count))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Floor_1)
                    .addComponent(Floor_1_Output)
                    .addComponent(Que_1)
                    .addComponent(Que_1_Count))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Floor_2)
                    .addComponent(Floor_2_Output)
                    .addComponent(Que_2)
                    .addComponent(Que_2_Count))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Floor_3)
                    .addComponent(Floor_3_Output)
                    .addComponent(Que_3)
                    .addComponent(Que_3_Count))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Floor_4)
                    .addComponent(Floor_4_Output)
                    .addComponent(Que_4)
                    .addComponent(Que_4_Count))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Que_0_Element_Jlabel)
                    .addComponent(Que_0_Element_Output))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Que_1_Element_Jlabel)
                    .addComponent(Que_1_Element_Output))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Que_2_Element_Jlabel)
                    .addComponent(Que_2_Element_Output))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Que_3_Element_Jlabel)
                    .addComponent(Que_3_Element_Output))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Que_4_Element_Jlabel)
                    .addComponent(Que_4_Element_Output))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setText("     Elevator-1");

        Elevator_1_State_Jlabel.setText("State: ");

        Elevator_1_CurrentFloor_Jlabel.setText("Current Floor:");

        Elevator_1_MaxFloor_Jlabel.setText("Max Floor :");

        Elevator_1_Capacity_Jlabel.setText("Capacity:");

        Elevator_1_CountInside_Jlabe.setText("Count Inside:");

        Elevator_1_InsidePassenger_Jlabel.setText("Inside  Passenger:");

        Elevator_1_State_Output.setText("Active");

        Elevator_1_CurrentFloor_Output.setText("0");

        Elevator_1_MaxFloor_Output.setText("0");

        Elevator_1_InsideElement_Output.setText("[]");

        Elevator_1_Capacity_Output.setText("10");

        Elevator_1_CountInside_Output.setText("0");

        Elevator_2_InsidePassenger_Output.setText("[]");

        Elevator_2_InsidePassenger_Jlabel.setText("Inside  Passenger:");

        Elevator_2_MaxFloor_Jlabel.setText("Max Floor :");

        Elevator_2_CurrentFloor_Jlabel.setText("Current Floor:");

        Elevator_2_State_Jlabel.setText("State: ");

        Elevator_2_State_Output.setText("Passive");

        Elevator_2_Title_Jlabel.setText("     Elevator-2");

        Elevator_2_Capacity_Jlabel.setText("Capacity:");

        Elevator_2_CountInside_Jlabel.setText("Count Inside:");

        Elevator_2_Capacity_Output.setText("10");

        Elevator_2_CountInside_Output.setText("0");

        Elevator_2_CurrentFloor_Output.setText("0");

        Elevator_2_MaxFloor_Output.setText("0");

        Elevator_3_InsidePassenger_Output.setText("[]");

        Elevator_3_InsidePassenger_Jlabel.setText("Inside  Passenger:");

        Elevator_3_MaxFloor_Jlabel.setText("Max Floor :");

        Elevator_3_CurrentFloor_Jlabel.setText("Current Floor:");

        Elevator_3_State_Jlabel.setText("State: ");

        Elevator_3_State_Output.setText("Passive");

        Elevator_3_Title_Jlabel.setText("     Elevator-3");

        Elevator_3_Capacity_Jlabel.setText("Capacity:");

        Elevator_3_CountInside_Jlabel.setText("Count Inside:");

        Elevator_3_Capacity_Output.setText("10");

        Elevator_3_CountInside_Output.setText("0");

        Elevator_3_CurrentFloor_Output.setText("0");

        Elevator_3_MaxFloor_Output.setText("0");

        Elevator_4_InsidePassenger_Output.setText("[]");

        Elevator_4_InsidePassenger_Jlabel.setText("Inside  Passenger:");

        Elevator_4_MaxFloor_Jlabel.setText("Max Floor :");

        Elevator_4_CurrentFloor_Jlabel.setText("Current Floor:");

        Elevator_4_State_Jlabel.setText("State: ");

        Elevator_4_State_Output.setText("Passive");

        Elevator_4_Title_Jlabel.setText("     Elevator-4");

        Elevator_4_Capacity_Jlabel.setText("Capacity:");

        Elevator_4_CountInside_Jlabel.setText("Count Inside:");

        Elevator_4_Capacity_Output.setText("10");

        Elevator_4_CountInside_Output.setText("0");

        Elevator_4_CurrentFloor_Output.setText("0");

        Elevator_4_MaxFloor_Output.setText("0");

        Elevator_5_InsidePassenger_Output.setText("[]");

        Elevator_5_InsidePassenger_Jlabel.setText("Inside  Passenger:");

        Elevator_5_MaxFloor_Jlabel.setText("Max Floor :");

        Elevator_5_CurrentFloor_Jlabel.setText("Current Floor:");

        Elevator_5_State_Jlabel.setText("State: ");

        Elevator_5_State_Output.setText("Passive");

        Elevator_5_Title_Jlabel.setText("     Elevator-5");

        Elevator_5_Capacity_Jlabel.setText("Capacity:");

        Elevator_5_CountInside_Jlabel.setText("Count Inside:");

        Elevator_5_Capacity_Output.setText("10");

        Elevator_5_CountInside_Output.setText("0");

        Elevator_5_CurrentFloor_Output.setText("0");

        Elevator_5_MaxFloor_Output.setText("0");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator4)
            .addComponent(jSeparator5)
            .addComponent(jSeparator6)
            .addComponent(jSeparator8)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Elevator_1_State_Jlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Elevator_1_MaxFloor_Jlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Elevator_1_CurrentFloor_Jlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Elevator_1_MaxFloor_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Elevator_1_CurrentFloor_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Elevator_1_State_Output, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(158, 158, 158))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(Elevator_1_Capacity_Jlabel)
                                        .addGap(34, 34, 34))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(Elevator_1_CountInside_Jlabe)
                                        .addGap(11, 11, 11)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Elevator_1_CountInside_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Elevator_1_Capacity_Output, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Elevator_1_InsidePassenger_Jlabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Elevator_1_InsideElement_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Elevator_2_State_Jlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Elevator_2_MaxFloor_Jlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Elevator_2_CurrentFloor_Jlabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Elevator_2_MaxFloor_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Elevator_2_CurrentFloor_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Elevator_2_State_Output, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Elevator_2_Title_Jlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(146, 146, 146))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(Elevator_2_Capacity_Jlabel)
                                        .addGap(34, 34, 34))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(Elevator_2_CountInside_Jlabel)
                                        .addGap(11, 11, 11)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Elevator_2_CountInside_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Elevator_2_Capacity_Output, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Elevator_2_InsidePassenger_Jlabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Elevator_2_InsidePassenger_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Elevator_3_State_Jlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Elevator_3_MaxFloor_Jlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Elevator_3_CurrentFloor_Jlabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Elevator_3_MaxFloor_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Elevator_3_CurrentFloor_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Elevator_3_State_Output, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Elevator_3_Title_Jlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(146, 146, 146))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(Elevator_3_Capacity_Jlabel)
                                        .addGap(34, 34, 34))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(Elevator_3_CountInside_Jlabel)
                                        .addGap(11, 11, 11)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Elevator_3_CountInside_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Elevator_3_Capacity_Output, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Elevator_3_InsidePassenger_Jlabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Elevator_3_InsidePassenger_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Elevator_4_State_Jlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Elevator_4_MaxFloor_Jlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Elevator_4_CurrentFloor_Jlabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Elevator_4_MaxFloor_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Elevator_4_CurrentFloor_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Elevator_4_State_Output, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                                .addComponent(Elevator_4_Title_Jlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(146, 146, 146))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(Elevator_4_Capacity_Jlabel)
                                        .addGap(34, 34, 34))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(Elevator_4_CountInside_Jlabel)
                                        .addGap(11, 11, 11)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Elevator_4_CountInside_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Elevator_4_Capacity_Output, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Elevator_4_InsidePassenger_Jlabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Elevator_4_InsidePassenger_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Elevator_5_State_Jlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Elevator_5_MaxFloor_Jlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Elevator_5_CurrentFloor_Jlabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Elevator_5_MaxFloor_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Elevator_5_CurrentFloor_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Elevator_5_State_Output, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Elevator_5_Title_Jlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(146, 146, 146))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(Elevator_5_Capacity_Jlabel)
                                .addGap(34, 34, 34))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(Elevator_5_CountInside_Jlabel)
                                .addGap(11, 11, 11)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Elevator_5_CountInside_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Elevator_5_Capacity_Output, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(31, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(Elevator_5_InsidePassenger_Jlabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Elevator_5_InsidePassenger_Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Elevator_1_State_Jlabel)
                            .addComponent(Elevator_1_State_Output))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Elevator_1_CurrentFloor_Jlabel)
                    .addComponent(Elevator_1_Capacity_Jlabel)
                    .addComponent(Elevator_1_CurrentFloor_Output)
                    .addComponent(Elevator_1_Capacity_Output))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Elevator_1_MaxFloor_Jlabel)
                    .addComponent(Elevator_1_CountInside_Jlabe)
                    .addComponent(Elevator_1_MaxFloor_Output)
                    .addComponent(Elevator_1_CountInside_Output))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Elevator_1_InsidePassenger_Jlabel)
                    .addComponent(Elevator_1_InsideElement_Output))
                .addGap(18, 18, 18)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Elevator_2_Title_Jlabel)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Elevator_2_State_Jlabel)
                        .addComponent(Elevator_2_State_Output)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Elevator_2_CurrentFloor_Jlabel)
                    .addComponent(Elevator_2_Capacity_Jlabel)
                    .addComponent(Elevator_2_CurrentFloor_Output)
                    .addComponent(Elevator_2_Capacity_Output))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Elevator_2_MaxFloor_Jlabel)
                    .addComponent(Elevator_2_CountInside_Jlabel)
                    .addComponent(Elevator_2_MaxFloor_Output)
                    .addComponent(Elevator_2_CountInside_Output))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Elevator_2_InsidePassenger_Jlabel)
                    .addComponent(Elevator_2_InsidePassenger_Output))
                .addGap(41, 41, 41)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Elevator_3_Title_Jlabel)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Elevator_3_State_Jlabel)
                        .addComponent(Elevator_3_State_Output)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Elevator_3_CurrentFloor_Jlabel)
                    .addComponent(Elevator_3_Capacity_Jlabel)
                    .addComponent(Elevator_3_CurrentFloor_Output)
                    .addComponent(Elevator_3_Capacity_Output))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Elevator_3_MaxFloor_Jlabel)
                    .addComponent(Elevator_3_CountInside_Jlabel)
                    .addComponent(Elevator_3_MaxFloor_Output)
                    .addComponent(Elevator_3_CountInside_Output))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Elevator_3_InsidePassenger_Jlabel)
                    .addComponent(Elevator_3_InsidePassenger_Output))
                .addGap(14, 14, 14)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Elevator_4_Title_Jlabel)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Elevator_4_State_Jlabel)
                        .addComponent(Elevator_4_State_Output)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Elevator_4_CurrentFloor_Jlabel)
                    .addComponent(Elevator_4_Capacity_Jlabel)
                    .addComponent(Elevator_4_CurrentFloor_Output)
                    .addComponent(Elevator_4_Capacity_Output))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Elevator_4_MaxFloor_Jlabel)
                    .addComponent(Elevator_4_CountInside_Jlabel)
                    .addComponent(Elevator_4_MaxFloor_Output)
                    .addComponent(Elevator_4_CountInside_Output))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Elevator_4_InsidePassenger_Jlabel)
                    .addComponent(Elevator_4_InsidePassenger_Output))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Elevator_5_Title_Jlabel)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Elevator_5_State_Jlabel)
                        .addComponent(Elevator_5_State_Output)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Elevator_5_CurrentFloor_Jlabel)
                    .addComponent(Elevator_5_Capacity_Jlabel)
                    .addComponent(Elevator_5_CurrentFloor_Output)
                    .addComponent(Elevator_5_Capacity_Output))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Elevator_5_MaxFloor_Jlabel)
                    .addComponent(Elevator_5_CountInside_Jlabel)
                    .addComponent(Elevator_5_MaxFloor_Output)
                    .addComponent(Elevator_5_CountInside_Output))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Elevator_5_InsidePassenger_Jlabel)
                    .addComponent(Elevator_5_InsidePassenger_Output))
                .addGap(14, 14, 14))
        );

        UpdateTable.setText("Update Table");
        UpdateTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateTableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(UpdateTable, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(396, 396, 396))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(UpdateTable, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UpdateTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateTableActionPerformed
       
        //Login Thread
        Integer.toString(controlThread.getLoginThread().getCurrentPassenger().getTargetFloor())  ;
        
        LoginThread_PassengerSize_Output.setText(Integer.toString(controlThread.getLoginThread().getCurrentPassenger().getPassengerSize()));
        LoginThread_CurrentTargetFloor_Output.setText(Integer.toString(controlThread.getLoginThread().getCurrentPassenger().getTargetFloor()));
        LoginThread_TotalPassenger_Ouput.setText(Integer.toString(controlThread.getLoginThread().getTotalPassengerCount()));
       
        //Exit Thread
        ExitThread_CurrentPassengerRequest_Output.setText(Integer.toString(controlThread.getExitThread().getCurrentPassenger().getPassengerSize()));
        ExitThread_CurrentTargetFloor_Output.setText(Integer.toString(controlThread.getExitThread().getCurrentPassenger().getTargetFloor()));
        ExitThread_ExitCount_Output.setText(Integer.toString(controlThread.getExitThread().getTotalPassengerCount()));
        
        //Exit Count
        FinalExitCount.setText(Integer.toString(Data.getFinalExitPassengerSize()));
        
        
        //Que and Floor Status
            //Floors
        Floor_0_Output.setText(Integer.toString(Data.floor0));
        Floor_1_Output.setText(Integer.toString(Data.floor1));
        Floor_2_Output.setText(Integer.toString(Data.floor2));
        Floor_3_Output.setText(Integer.toString(Data.floor3));
        Floor_4_Output.setText(Integer.toString(Data.floor4));
            //Ques
        Que_0_Count.setText(Integer.toString(Data.floorQue0_TotalPassengerSize()));
        Que_1_Count.setText(Integer.toString(Data.floorQue1_TotalPassengerSize()));
        Que_2_Count.setText(Integer.toString(Data.floorQue2_TotalPassengerSize()));
        Que_3_Count.setText(Integer.toString(Data.floorQue3_TotalPassengerSize()));
        Que_4_Count.setText(Integer.toString(Data.floorQue4_TotalPassengerSize()));
        
        
        //Que Elements
        String passengerStart="[";
        String passengerStop="]";
        String passengerSeparator=",";
        
        String Que_0_Elements="[";
        for (passengerInfo passenger : Data.floorQue0) {
            
            String passengerSize=Integer.toString(passenger.getPassengerSize());
            String passengerTarget=Integer.toString(passenger.getTargetFloor());
            
            String passengerInfo=passengerStart+passengerSize+passengerSeparator+passengerTarget+passengerStop;
            Que_0_Elements+=passengerInfo+",";
        }
        Que_0_Elements+="]";
        Que_0_Element_Output.setText(Que_0_Elements);
        
        
        String Que_1_Elements="[";
        for (passengerInfo passenger : Data.floorQue1) {
            
            String passengerSize=Integer.toString(passenger.getPassengerSize());
            String passengerTarget=Integer.toString(passenger.getTargetFloor());
            
            String passengerInfo=passengerStart+passengerSize+passengerSeparator+passengerTarget+passengerStop;
            Que_1_Elements+=passengerInfo+",";
        }
        Que_1_Elements+="]";
        Que_1_Element_Output.setText(Que_1_Elements);
        
        String Que_2_Elements="[";
        for (passengerInfo passenger : Data.floorQue2) {
            
            String passengerSize=Integer.toString(passenger.getPassengerSize());
            String passengerTarget=Integer.toString(passenger.getTargetFloor());
            
            String passengerInfo=passengerStart+passengerSize+passengerSeparator+passengerTarget+passengerStop;
            Que_2_Elements+=passengerInfo+",";
        }
        Que_2_Elements+="]";
        Que_2_Element_Output.setText(Que_2_Elements);
        
        String Que_3_Elements="[";
        for (passengerInfo passenger : Data.floorQue3) {
            
            String passengerSize=Integer.toString(passenger.getPassengerSize());
            String passengerTarget=Integer.toString(passenger.getTargetFloor());
            
            String passengerInfo=passengerStart+passengerSize+passengerSeparator+passengerTarget+passengerStop;
            Que_3_Elements+=passengerInfo+",";
        }
        Que_3_Elements+="]";
        Que_3_Element_Output.setText(Que_3_Elements);
        
        
        String Que_4_Elements="[";
        for (passengerInfo passenger : Data.floorQue4) {
            
            String passengerSize=Integer.toString(passenger.getPassengerSize());
            String passengerTarget=Integer.toString(passenger.getTargetFloor());
            
            String passengerInfo=passengerStart+passengerSize+passengerSeparator+passengerTarget+passengerStop;
            Que_4_Elements+=passengerInfo+",";
        }
        Que_4_Elements+="]";
        Que_4_Element_Output.setText(Que_4_Elements);
        /*
        
        */
        //Elevator Threads
            //Elevator-1
            
        Integer.toString(WIDTH);
        
        
        String Elevator_1_State;
        if(controlThread.getElevatorThread_1().isActive){
            Elevator_1_State="Active";
        }else{
            Elevator_1_State="Passive";
        }
        Elevator_1_State_Output.setText(Elevator_1_State);
        Elevator_1_CurrentFloor_Output.setText(Integer.toString(controlThread.getElevatorThread_1().getElevatorData().getCurrentFloorNumber()));
        Elevator_1_MaxFloor_Output.setText(Integer.toString(controlThread.getElevatorThread_1().maxNumberOfFlat()));
        Elevator_1_Capacity_Output.setText(Integer.toString(controlThread.getElevatorThread_1().getElevatorData().ELEVATOR_PASSANGER_CAPACITY));
        Elevator_1_CountInside_Output.setText(Integer.toString(controlThread.getElevatorThread_1().getElevatorData().getCurrentTotalSize()));
        
            //Inside passenger in elevator1
        String Elevator_1_InsidePassenger;
        
        String InsidePassengerFloor_0_Count=Integer.toString(controlThread.getElevatorThread_1().getElevatorData().getTargetGoalFloor0_Size());
        String Elevator_1_InsidePassenger_Floor_0="["+InsidePassengerFloor_0_Count+","+"0"+"]";
        
        String InsidePassengerFloor_1_Count=Integer.toString(controlThread.getElevatorThread_1().getElevatorData().getTargetGoalFloor1_Size());
        String Elevator_1_InsidePassenger_Floor_1="["+InsidePassengerFloor_1_Count+","+"1"+"]";
        
        String InsidePassengerFloor_2_Count=Integer.toString(controlThread.getElevatorThread_1().getElevatorData().getTargetGoalFloor2_Size());
        String Elevator_1_InsidePassenger_Floor_2="["+InsidePassengerFloor_2_Count+","+"2"+"]";
        
        String InsidePassengerFloor_3_Count=Integer.toString(controlThread.getElevatorThread_1().getElevatorData().getTargetGoalFloor3_Size());
        String Elevator_1_InsidePassenger_Floor_3="["+InsidePassengerFloor_3_Count+","+"3"+"]";
        
        String InsidePassengerFloor_4_Count=Integer.toString(controlThread.getElevatorThread_1().getElevatorData().getTargetGoalFloor4_Size());
        String Elevator_1_InsidePassenger_Floor_4="["+InsidePassengerFloor_4_Count+","+"4"+"]";
        Elevator_1_InsidePassenger="["+Elevator_1_InsidePassenger_Floor_0+" , "+ Elevator_1_InsidePassenger_Floor_1+" , "+Elevator_1_InsidePassenger_Floor_2+" , "+Elevator_1_InsidePassenger_Floor_3+" , "+Elevator_1_InsidePassenger_Floor_4+"]";
        
        Elevator_1_InsideElement_Output.setText(Elevator_1_InsidePassenger);
        
        
        //Elevator-2
        
            //Elevator-2
        String Elevator_2_State;
        if(controlThread.getElevatorThread_2().isActive){
            Elevator_2_State="Active";
        }else{
            Elevator_2_State="Passive";
        }
        Elevator_2_State_Output.setText(Elevator_2_State);
        Elevator_2_CurrentFloor_Output.setText(Integer.toString(controlThread.getElevatorThread_2().getElevatorData().getCurrentFloorNumber()));
        Elevator_2_MaxFloor_Output.setText(Integer.toString(controlThread.getElevatorThread_2().maxNumberOfFlat()));
        Elevator_2_Capacity_Output.setText(Integer.toString(controlThread.getElevatorThread_2().getElevatorData().ELEVATOR_PASSANGER_CAPACITY));
        Elevator_2_CountInside_Output.setText(Integer.toString(controlThread.getElevatorThread_2().getElevatorData().getCurrentTotalSize()));
        
            //Inside passenger in elevator2
        String Elevator_2_InsidePassenger;
        
        InsidePassengerFloor_0_Count=Integer.toString(controlThread.getElevatorThread_2().getElevatorData().getTargetGoalFloor0_Size());
        String Elevator_2_InsidePassenger_Floor_0="["+InsidePassengerFloor_0_Count+","+"0"+"]";
        
        InsidePassengerFloor_1_Count=Integer.toString(controlThread.getElevatorThread_2().getElevatorData().getTargetGoalFloor1_Size());
        String Elevator_2_InsidePassenger_Floor_1="["+InsidePassengerFloor_1_Count+","+"1"+"]";
        
        InsidePassengerFloor_2_Count=Integer.toString(controlThread.getElevatorThread_2().getElevatorData().getTargetGoalFloor2_Size());
        String Elevator_2_InsidePassenger_Floor_2="["+InsidePassengerFloor_2_Count+","+"2"+"]";
        
        InsidePassengerFloor_3_Count=Integer.toString(controlThread.getElevatorThread_2().getElevatorData().getTargetGoalFloor3_Size());
        String Elevator_2_InsidePassenger_Floor_3="["+InsidePassengerFloor_3_Count+","+"3"+"]";
        
        InsidePassengerFloor_4_Count=Integer.toString(controlThread.getElevatorThread_2().getElevatorData().getTargetGoalFloor4_Size());
        String Elevator_2_InsidePassenger_Floor_4="["+InsidePassengerFloor_4_Count+","+"4"+"]";
        Elevator_2_InsidePassenger="["+Elevator_2_InsidePassenger_Floor_0+" , "+ Elevator_2_InsidePassenger_Floor_1+" , "+Elevator_2_InsidePassenger_Floor_2+" , "+Elevator_2_InsidePassenger_Floor_3+" , "+Elevator_2_InsidePassenger_Floor_4+"]";
        
        Elevator_2_InsidePassenger_Output.setText(Elevator_2_InsidePassenger);
        
        
        //Elevator-3
        String Elevator_3_State;
        if(controlThread.getElevatorThread_3().isActive){
            Elevator_3_State="Active";
        }else{
            Elevator_3_State="Passive";
        }
        Elevator_3_State_Output.setText(Elevator_3_State);
        Elevator_3_CurrentFloor_Output.setText(Integer.toString(controlThread.getElevatorThread_3().getElevatorData().getCurrentFloorNumber()));
        Elevator_3_MaxFloor_Output.setText(Integer.toString(controlThread.getElevatorThread_3().maxNumberOfFlat()));
        Elevator_3_Capacity_Output.setText(Integer.toString(controlThread.getElevatorThread_3().getElevatorData().ELEVATOR_PASSANGER_CAPACITY));
        Elevator_3_CountInside_Output.setText(Integer.toString(controlThread.getElevatorThread_3().getElevatorData().getCurrentTotalSize()));
        
            //Inside passenger in elevator3
        String Elevator_3_InsidePassenger;
        
        InsidePassengerFloor_0_Count=Integer.toString(controlThread.getElevatorThread_3().getElevatorData().getTargetGoalFloor0_Size());
        String Elevator_3_InsidePassenger_Floor_0="["+InsidePassengerFloor_0_Count+","+"0"+"]";
        
        InsidePassengerFloor_1_Count=Integer.toString(controlThread.getElevatorThread_3().getElevatorData().getTargetGoalFloor1_Size());
        String Elevator_3_InsidePassenger_Floor_1="["+InsidePassengerFloor_1_Count+","+"1"+"]";
        
        InsidePassengerFloor_2_Count=Integer.toString(controlThread.getElevatorThread_3().getElevatorData().getTargetGoalFloor2_Size());
        String Elevator_3_InsidePassenger_Floor_2="["+InsidePassengerFloor_2_Count+","+"2"+"]";
        
        InsidePassengerFloor_3_Count=Integer.toString(controlThread.getElevatorThread_3().getElevatorData().getTargetGoalFloor3_Size());
        String Elevator_3_InsidePassenger_Floor_3="["+InsidePassengerFloor_3_Count+","+"3"+"]";
        
        InsidePassengerFloor_4_Count=Integer.toString(controlThread.getElevatorThread_3().getElevatorData().getTargetGoalFloor4_Size());
        String Elevator_3_InsidePassenger_Floor_4="["+InsidePassengerFloor_4_Count+","+"4"+"]";
        Elevator_3_InsidePassenger="["+Elevator_3_InsidePassenger_Floor_0+" , "+ Elevator_3_InsidePassenger_Floor_1+" , "+Elevator_3_InsidePassenger_Floor_2+" , "+Elevator_3_InsidePassenger_Floor_3+" , "+Elevator_3_InsidePassenger_Floor_4+"]";
        
        Elevator_3_InsidePassenger_Output.setText(Elevator_3_InsidePassenger);
        
        
        
        //Elevator-4
        
        String Elevator_4_State;
        if(controlThread.getElevatorThread_4().isActive){
            Elevator_4_State="Active";
        }else{
            Elevator_4_State="Passive";
        }
        Elevator_4_State_Output.setText(Elevator_4_State);
        Elevator_4_CurrentFloor_Output.setText(Integer.toString(controlThread.getElevatorThread_4().getElevatorData().getCurrentFloorNumber()));
        Elevator_4_MaxFloor_Output.setText(Integer.toString(controlThread.getElevatorThread_4().maxNumberOfFlat()));
        Elevator_4_Capacity_Output.setText(Integer.toString(controlThread.getElevatorThread_4().getElevatorData().ELEVATOR_PASSANGER_CAPACITY));
        Elevator_4_CountInside_Output.setText(Integer.toString(controlThread.getElevatorThread_4().getElevatorData().getCurrentTotalSize()));
        
            //Inside passenger in elevator3
        String Elevator_4_InsidePassenger;
        
        InsidePassengerFloor_0_Count=Integer.toString(controlThread.getElevatorThread_4().getElevatorData().getTargetGoalFloor0_Size());
        String Elevator_4_InsidePassenger_Floor_0="["+InsidePassengerFloor_0_Count+","+"0"+"]";
        
        InsidePassengerFloor_1_Count=Integer.toString(controlThread.getElevatorThread_4().getElevatorData().getTargetGoalFloor1_Size());
        String Elevator_4_InsidePassenger_Floor_1="["+InsidePassengerFloor_1_Count+","+"1"+"]";
        
        InsidePassengerFloor_2_Count=Integer.toString(controlThread.getElevatorThread_4().getElevatorData().getTargetGoalFloor2_Size());
        String Elevator_4_InsidePassenger_Floor_2="["+InsidePassengerFloor_2_Count+","+"2"+"]";
        
        InsidePassengerFloor_3_Count=Integer.toString(controlThread.getElevatorThread_4().getElevatorData().getTargetGoalFloor3_Size());
        String Elevator_4_InsidePassenger_Floor_3="["+InsidePassengerFloor_3_Count+","+"3"+"]";
        
        InsidePassengerFloor_4_Count=Integer.toString(controlThread.getElevatorThread_4().getElevatorData().getTargetGoalFloor4_Size());
        String Elevator_4_InsidePassenger_Floor_4="["+InsidePassengerFloor_4_Count+","+"4"+"]";
        Elevator_4_InsidePassenger="["+Elevator_4_InsidePassenger_Floor_0+" , "+ Elevator_4_InsidePassenger_Floor_1+" , "+Elevator_4_InsidePassenger_Floor_2+" , "+Elevator_4_InsidePassenger_Floor_3+" , "+Elevator_4_InsidePassenger_Floor_4+"]";
        
        Elevator_4_InsidePassenger_Output.setText(Elevator_4_InsidePassenger);   
        
        
        //Elevator-5
        
        String Elevator_5_State;
        if(controlThread.getElevatorThread_5().isActive){
            Elevator_5_State="Active";
        }else{
            Elevator_5_State="Passive";
        }
        Elevator_5_State_Output.setText(Elevator_5_State);
        Elevator_5_CurrentFloor_Output.setText(Integer.toString(controlThread.getElevatorThread_5().getElevatorData().getCurrentFloorNumber()));
        Elevator_5_MaxFloor_Output.setText(Integer.toString(controlThread.getElevatorThread_5().maxNumberOfFlat()));
        Elevator_5_Capacity_Output.setText(Integer.toString(controlThread.getElevatorThread_5().getElevatorData().ELEVATOR_PASSANGER_CAPACITY));
        Elevator_5_CountInside_Output.setText(Integer.toString(controlThread.getElevatorThread_5().getElevatorData().getCurrentTotalSize()));
        
            //Inside passenger in elevator3
        String Elevator_5_InsidePassenger;
        
        InsidePassengerFloor_0_Count=Integer.toString(controlThread.getElevatorThread_5().getElevatorData().getTargetGoalFloor0_Size());
        String Elevator_5_InsidePassenger_Floor_0="["+InsidePassengerFloor_0_Count+","+"0"+"]";
        
        InsidePassengerFloor_1_Count=Integer.toString(controlThread.getElevatorThread_5().getElevatorData().getTargetGoalFloor1_Size());
        String Elevator_5_InsidePassenger_Floor_1="["+InsidePassengerFloor_1_Count+","+"1"+"]";
        
        InsidePassengerFloor_2_Count=Integer.toString(controlThread.getElevatorThread_5().getElevatorData().getTargetGoalFloor2_Size());
        String Elevator_5_InsidePassenger_Floor_2="["+InsidePassengerFloor_2_Count+","+"2"+"]";
        
        InsidePassengerFloor_3_Count=Integer.toString(controlThread.getElevatorThread_5().getElevatorData().getTargetGoalFloor3_Size());
        String Elevator_5_InsidePassenger_Floor_3="["+InsidePassengerFloor_3_Count+","+"3"+"]";
        
        InsidePassengerFloor_4_Count=Integer.toString(controlThread.getElevatorThread_5().getElevatorData().getTargetGoalFloor4_Size());
        String Elevator_5_InsidePassenger_Floor_4="["+InsidePassengerFloor_4_Count+","+"4"+"]";
        Elevator_5_InsidePassenger="["+Elevator_5_InsidePassenger_Floor_0+" , "+ Elevator_5_InsidePassenger_Floor_1+" , "+Elevator_5_InsidePassenger_Floor_2+" , "+Elevator_5_InsidePassenger_Floor_3+" , "+Elevator_5_InsidePassenger_Floor_4+"]";
        
        Elevator_5_InsidePassenger_Output.setText(Elevator_5_InsidePassenger);
        
    
    }//GEN-LAST:event_UpdateTableActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TekDersProje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TekDersProje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TekDersProje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TekDersProje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TekDersProje().setVisible(true);
            }
        });
        
        startProject();
        TekDersProje projectGUI= new TekDersProje();
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Elevator_1_Capacity_Jlabel;
    private javax.swing.JLabel Elevator_1_Capacity_Output;
    private javax.swing.JLabel Elevator_1_CountInside_Jlabe;
    private javax.swing.JLabel Elevator_1_CountInside_Output;
    private javax.swing.JLabel Elevator_1_CurrentFloor_Jlabel;
    private javax.swing.JLabel Elevator_1_CurrentFloor_Output;
    private javax.swing.JLabel Elevator_1_InsideElement_Output;
    private javax.swing.JLabel Elevator_1_InsidePassenger_Jlabel;
    private javax.swing.JLabel Elevator_1_MaxFloor_Jlabel;
    private javax.swing.JLabel Elevator_1_MaxFloor_Output;
    private javax.swing.JLabel Elevator_1_State_Jlabel;
    private javax.swing.JLabel Elevator_1_State_Output;
    private javax.swing.JLabel Elevator_2_Capacity_Jlabel;
    private javax.swing.JLabel Elevator_2_Capacity_Output;
    private javax.swing.JLabel Elevator_2_CountInside_Jlabel;
    private javax.swing.JLabel Elevator_2_CountInside_Output;
    private javax.swing.JLabel Elevator_2_CurrentFloor_Jlabel;
    private javax.swing.JLabel Elevator_2_CurrentFloor_Output;
    private javax.swing.JLabel Elevator_2_InsidePassenger_Jlabel;
    private javax.swing.JLabel Elevator_2_InsidePassenger_Output;
    private javax.swing.JLabel Elevator_2_MaxFloor_Jlabel;
    private javax.swing.JLabel Elevator_2_MaxFloor_Output;
    private javax.swing.JLabel Elevator_2_State_Jlabel;
    private javax.swing.JLabel Elevator_2_State_Output;
    private javax.swing.JLabel Elevator_2_Title_Jlabel;
    private javax.swing.JLabel Elevator_3_Capacity_Jlabel;
    private javax.swing.JLabel Elevator_3_Capacity_Output;
    private javax.swing.JLabel Elevator_3_CountInside_Jlabel;
    private javax.swing.JLabel Elevator_3_CountInside_Output;
    private javax.swing.JLabel Elevator_3_CurrentFloor_Jlabel;
    private javax.swing.JLabel Elevator_3_CurrentFloor_Output;
    private javax.swing.JLabel Elevator_3_InsidePassenger_Jlabel;
    private javax.swing.JLabel Elevator_3_InsidePassenger_Output;
    private javax.swing.JLabel Elevator_3_MaxFloor_Jlabel;
    private javax.swing.JLabel Elevator_3_MaxFloor_Output;
    private javax.swing.JLabel Elevator_3_State_Jlabel;
    private javax.swing.JLabel Elevator_3_State_Output;
    private javax.swing.JLabel Elevator_3_Title_Jlabel;
    private javax.swing.JLabel Elevator_4_Capacity_Jlabel;
    private javax.swing.JLabel Elevator_4_Capacity_Output;
    private javax.swing.JLabel Elevator_4_CountInside_Jlabel;
    private javax.swing.JLabel Elevator_4_CountInside_Output;
    private javax.swing.JLabel Elevator_4_CurrentFloor_Jlabel;
    private javax.swing.JLabel Elevator_4_CurrentFloor_Output;
    private javax.swing.JLabel Elevator_4_InsidePassenger_Jlabel;
    private javax.swing.JLabel Elevator_4_InsidePassenger_Output;
    private javax.swing.JLabel Elevator_4_MaxFloor_Jlabel;
    private javax.swing.JLabel Elevator_4_MaxFloor_Output;
    private javax.swing.JLabel Elevator_4_State_Jlabel;
    private javax.swing.JLabel Elevator_4_State_Output;
    private javax.swing.JLabel Elevator_4_Title_Jlabel;
    private javax.swing.JLabel Elevator_5_Capacity_Jlabel;
    private javax.swing.JLabel Elevator_5_Capacity_Output;
    private javax.swing.JLabel Elevator_5_CountInside_Jlabel;
    private javax.swing.JLabel Elevator_5_CountInside_Output;
    private javax.swing.JLabel Elevator_5_CurrentFloor_Jlabel;
    private javax.swing.JLabel Elevator_5_CurrentFloor_Output;
    private javax.swing.JLabel Elevator_5_InsidePassenger_Jlabel;
    private javax.swing.JLabel Elevator_5_InsidePassenger_Output;
    private javax.swing.JLabel Elevator_5_MaxFloor_Jlabel;
    private javax.swing.JLabel Elevator_5_MaxFloor_Output;
    private javax.swing.JLabel Elevator_5_State_Jlabel;
    private javax.swing.JLabel Elevator_5_State_Output;
    private javax.swing.JLabel Elevator_5_Title_Jlabel;
    private javax.swing.JLabel ExitThread_CurrentPassengerRequest_Label;
    private javax.swing.JLabel ExitThread_CurrentPassengerRequest_Output;
    private javax.swing.JLabel ExitThread_CurrentTargetFloor_Output;
    private javax.swing.JLabel ExitThread_ExitCount_Jlabel;
    private javax.swing.JLabel ExitThread_ExitCount_Output;
    private javax.swing.JLabel ExitThread_TargetFloor_Jlabel;
    private javax.swing.JLabel FinalExitCount;
    private javax.swing.JLabel Floor_0;
    private javax.swing.JLabel Floor_0_Output;
    private javax.swing.JLabel Floor_1;
    private javax.swing.JLabel Floor_1_Output;
    private javax.swing.JLabel Floor_2;
    private javax.swing.JLabel Floor_2_Output;
    private javax.swing.JLabel Floor_3;
    private javax.swing.JLabel Floor_3_Output;
    private javax.swing.JLabel Floor_4;
    private javax.swing.JLabel Floor_4_Output;
    private javax.swing.JLabel LoginThread_CurrentPassengerSize_Jlabel;
    private javax.swing.JLabel LoginThread_CurrentTargetFloor_Output;
    private javax.swing.JLabel LoginThread_PassengerSize_Output;
    private javax.swing.JLabel LoginThread_TotalPassenger_Ouput;
    private javax.swing.JLabel Que_0;
    private javax.swing.JLabel Que_0_Count;
    private javax.swing.JLabel Que_0_Element_Jlabel;
    private javax.swing.JLabel Que_0_Element_Output;
    private javax.swing.JLabel Que_1;
    private javax.swing.JLabel Que_1_Count;
    private javax.swing.JLabel Que_1_Element_Jlabel;
    private javax.swing.JLabel Que_1_Element_Output;
    private javax.swing.JLabel Que_2;
    private javax.swing.JLabel Que_2_Count;
    private javax.swing.JLabel Que_2_Element_Jlabel;
    private javax.swing.JLabel Que_2_Element_Output;
    private javax.swing.JLabel Que_3;
    private javax.swing.JLabel Que_3_Count;
    private javax.swing.JLabel Que_3_Element_Jlabel;
    private javax.swing.JLabel Que_3_Element_Output;
    private javax.swing.JLabel Que_4;
    private javax.swing.JLabel Que_4_Count;
    private javax.swing.JLabel Que_4_Element_Jlabel;
    private javax.swing.JLabel Que_4_Element_Output;
    private javax.swing.JButton UpdateTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JLabel loginThread_CurrentTartget_Jlabel;
    // End of variables declaration//GEN-END:variables
}
